on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

name: Handle Golang Build, Test and Release

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-and-publish-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build linux amd64
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-X 'pihole_exporter/config.PackageName=pihole_exporter' -X 'pihole_exporter/config.Version=${{  github.ref_name }}'" -o release/linux/amd64/pihole_exporter-linux-amd64 .
    
    - name: Build linux arm64
      run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-X 'pihole_exporter/config.PackageName=pihole_exporter' -X 'pihole_exporter/config.Version=${{  github.ref_name }}'" -o release/linux/arm64/pihole_exporter-linux-arm64 .
    
    - name: Build linux arm
      run: CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -ldflags="-X 'pihole_exporter/config.PackageName=pihole_exporter' -X 'pihole_exporter/config.Version=${{  github.ref_name }}'" -o release/linux/arm/pihole_exporter-linux-arm .
    
    - name: Build windows amd64
      run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-X 'pihole_exporter/config.PackageName=pihole_exporter' -X 'pihole_exporter/config.Version=${{  github.ref_name }}'" -o release/windows/amd64/pihole_exporter-windows-amd64 .
    
    - name: Build darwin amd64
      run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-X 'pihole_exporter/config.PackageName=pihole_exporter' -X 'pihole_exporter/config.Version=${{  github.ref_name }}'" -o release/darwin/amd64/pihole_exporter-darwin-amd64 .
    
    - name: Build darwin arm64
      run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-X 'pihole_exporter/config.PackageName=pihole_exporter' -X 'pihole_exporter/config.Version=${{  github.ref_name }}'" -o release/darwin/arm64/pihole_exporter-darwin-arm64 .

    - name: Test
      run: go test -v ./...
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          release/linux/amd64/pihole_exporter-linux-amd64
          release/linux/arm64/pihole_exporter-linux-arm64
          release/linux/arm/pihole_exporter-linux-arm
          release/windows/amd64/pihole_exporter-windows-amd64
          release/darwin/amd64/pihole_exporter-darwin-amd64
          release/darwin/arm64/pihole_exporter-darwin-arm64


  build-and-push-docker-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # [docker/metadata-action](https://github.com/docker/metadata-action#about)
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        if: startsWith(github.ref, 'refs/tags/')
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #[Usage](https://github.com/docker/build-push-action#usage)
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
